name: Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build APK
        run: cmd.exe /c gradlew.bat assembleRelease

      - name: Sign APK
        run: cmd.exe /c java.exe -jar "signer\\ApkSigner.jar" sign --key "signer\\apkeasytool.pk8" --cert "signer\\apkeasytool.pem" --v4-signing-enabled false --out "%cd%\\app\\build\\outputs\\apk\\release\\youtube_pro_signed.apk" "%cd%\\app\\build\\outputs\\apk\\release\\app-release-unsigned.apk"

      - name: Generate timestamped APK filename
        id: timestamp
        shell: bash
        run: |
          TIMESTAMP=$(date +%Y-%m-%d_%H-%M-%S)
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT

      - name: Copy APK to APK folder with timestamp
        shell: pwsh
        run: |
          $timestamp = "${{ steps.timestamp.outputs.timestamp }}"
          $outputDir = "APK"
          $apkSource = "app/build/outputs/apk/release/youtube_pro_signed.apk"
          $apkDest = "$outputDir/youtube_pro_signed_$timestamp.apk"

          if (-Not (Test-Path $outputDir)) {
            New-Item -ItemType Directory -Path $outputDir | Out-Null
          }

          Copy-Item $apkSource -Destination $apkDest

      - name: Commit APK to APK branch
        shell: bash
        run: |
          TIMESTAMP=${{ steps.timestamp.outputs.timestamp }}
          FILE_NAME="youtube_pro_signed_${TIMESTAMP}.apk"

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          if git ls-remote --exit-code --heads origin APK; then
            git fetch origin APK
            git switch APK
          else
            git checkout --orphan APK
          fi

          cp "APK/$FILE_NAME" .
          git add "$FILE_NAME"
          git commit -m "Add signed APK $FILE_NAME"
          git push origin APK
